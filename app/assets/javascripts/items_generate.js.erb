// create table for ASIN

var maxColnum = 2;
var maxRownum = 9600;
var mydata = [];
var colOption = [];
for(var i = 0; i < maxRownum; i++){
  mydata[i] = [];
  for(var j = 0; j < maxColnum; j++){
    mydata[i][j] = "";
  }
}

var tp = document.getElementById('types').value;
if(tp == "JAN"){
  var ts = "ASIN";
}else{
  var ts = "JAN";
}

var container = document.getElementById('result');
var handsontable = new Handsontable(container, {
  /* オプション */
  width: 440,
  height: 400,
  contextMenu: true,
  data: mydata,
  rowHeaders: true,
  colHeaders: ["[入力] "+tp, "[出力] "+ts],
  maxCols: maxColnum,
  maxRows: maxRownum,
  manualColumnResize: true,
  autoColumnSize: false,
  colWidths:[160,160]
});

var tp = document.getElementById('types').value;

$("#types").change(function(){
    tp = document.getElementById('types').value;
    if(tp == "JAN"){

      handsontable.updateSettings(
        {colHeaders: ["[入力] JAN", "[出力] ASIN"]}
      );

    }else{
      handsontable.updateSettings(
        {colHeaders: ["[入力] ASIN", "[出力] JAN"]}
      );
    }
});

$("#converter").click(function () {
  if(document.getElementById("converter").innerText == "変換開始"){
    alert("変換を開始します");

    var orglist = handsontable.getData();
    for(var j = 0; j < orglist.length; j++){
      orglist[j][1] = ""
      if(orglist[j][0] == ""){
        //orglist.length = j;
        handsontable.loadData(orglist);
        break;
      }
    }
    handsontable.render();
    var type = document.getElementById("types").value;
    var pgnum = 1;
    document.getElementById("converter").innerText = "中断";
    document.getElementById("converter").className = "btn btn-warning";
    document.getElementById("progress").value = "continue";
    //handsontable.loadData(mydata);
    repajax(type,pgnum);

  }else{
    document.getElementById("converter").innerText = "変換開始";
    document.getElementById("converter").className = "btn btn-info";
    document.getElementById("progress").value = "cancel";
  }
});

function repajax(type,pgnum){

  var orglist = handsontable.getData();
  var body = [];
  handsontable.render();
  body[0] = type;
  body[1] = orglist;
  body[2] = pgnum;

  body = JSON.stringify(body);
  myData = {data: body};

  if(document.getElementById("progress").value == "cancel"){
    alert("中断します");
    return;
  }

  $.ajax({
    url: "/items/convert",
    type: "POST",
    data: myData,
    dataType: 'json',
    success: function (resData) {

      if(resData == ""){
        handsontable.render();
        document.getElementById("converter").innerText = "変換開始";
        document.getElementById("converter").className = "btn btn-info";
        alert("終了しました");
        return;
      }
      var org_data = handsontable.getData();
      var init = (pgnum - 1) * 10;
      for(var i = 0; i < resData.length; i++){
        org_data[init + i][1] = resData[i];
      }

      handsontable.loadData(org_data);

      if(resData.length != 10){
        document.getElementById("converter").innerText = "変換開始";
        document.getElementById("converter").className = "btn btn-info";
        handsontable.render();
        alert("終了しました");
        return;
      }
      pgnum++;
      sleep(500,repajax(type,pgnum));
      handsontable.render();
    },
    error: function (resData) {
      alert("Error");
      return false;
    }
  });
}



$("#output").click(function () {
  var tempData = handsontable.getData();
  var csvdata = "";

  for(var k = 0; k < tempData.length; k++){
    csvdata = csvdata + tempData[k][0] + "\n";
  }

  var str_array = Encoding.stringToCode(csvdata);
  //var sjis_array = Encoding.convert(str_array, "SJIS", "UNICODE");
  var uint8_array = new Uint8Array(str_array);

  var blob = new Blob([uint8_array], { "type" : "text/tsv" });
  //var blob = new Blob(["あいうえお"], { "type" : "text/tsv" });

  if (window.navigator.msSaveBlob) {
      window.navigator.msSaveBlob(blob, "list.txt");

      // msSaveOrOpenBlobの場合はファイルを保存せずに開ける
      window.navigator.msSaveOrOpenBlob(blob, "list.txt");
  } else {
      document.getElementById("output").href = window.URL.createObjectURL(blob);
  }
});


function sleep(time, callback){
  setTimeout(callback, time);
}
